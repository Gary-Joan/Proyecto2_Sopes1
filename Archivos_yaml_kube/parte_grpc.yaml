apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: gogrpc
  name: gogrpc
  namespace: project
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: gogrpc
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: gogrpc
    spec:
      containers:
      - image: garyjoan14/gogrpc:1.0
        name: gogrpc
        ports:
        - containerPort: 8081
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: pythongrpc
  name: pythongrpc
  namespace: project
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: pythongrpc
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: pythongrpc
    spec:
      containers:
      - image: garyjoan14/pythongrpc:1.0
        name: pythongrpc
        ports:
        - containerPort: 81
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: mongo
  name: mongo
  namespace: project
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongo
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: mongo
    spec:
      containers:
      - env:
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: rootpassword
        - name: MONGO_INITDB_ROOT_USERNAME
          value: root
        image: mongo:latest
        name: mongo
        ports:
        - containerPort: 27017
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: redis
  name: redis
  namespace: project
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: redis
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: redis
    spec:
      containers:
      - image: redis
        name: redis
        ports:
        - containerPort: 6379
        resources: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: gogrpc
  name: gogrpc
  namespace: project
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8081
  selector:
    io.kompose.service: gogrpc
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: pythongrpc
  name: pythongrpc
  namespace: project
spec:
  ports:
  - name: "81"
    port: 80
    targetPort: 81
  selector:
    io.kompose.service: pythongrpc  
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: mongo
  name: mongo
  namespace: project
spec:
  ports:
  - name: "27017"
    port: 27017
    targetPort: 27017
  selector:
    io.kompose.service: mongo
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: redis
  name: redis
  namespace: project
spec:
  ports:
  - name: "6379"
    port: 6379
    targetPort: 6379
  selector:
    io.kompose.service: redis
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  name: ingress-nginx
  namespace: project
spec:
  rules:
    - host: v1.peladonerd.local 
      http:
        paths:
          - backend:
              serviceName: gogrpc
              servicePort: 80
            path: /
