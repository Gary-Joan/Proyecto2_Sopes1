version: "3.8"
services:
  ############# Servidor Go con rabbitmq ###############
  goservice:
    build: "./Go"
    container_name: goservice
    restart: always
    volumes: 
      - ./Go:/app/
    ports:
      - "8080:8080"
    depends_on: 
      - rabbitmq
    networks: 
      - network
#################### Servidor de go con grpc ########################
  gogrpc:
    build: "./Go_grpc"
    container_name: gogrpc
    restart: always
    volumes: 
      - ./Go_grpc:/app/
    ports:
      - "8081:8081"
    networks: 
      - network
#################### Servidor de python con grpc ########################
  pythongrpc:
    build: "./Python-grpc"
    container_name: pythongrpc
    restart: always
    volumes:
      - ./Python-grpc:/project
    ports: 
      - "81:81"
    depends_on: 
      - mongo
      - redis
    networks:
      - network
 #################### Servidor de python con rabbitmq ########################
  flaskapp:
    build: "./Python"
    container_name: flaskapp
    restart: always
    volumes:
      - ./Python:/project
    ports: 
      - "80:80"
    depends_on: 
      - rabbitmq
      - mongo
      - redis
    networks:
      - network

  # nginx:
  #   build: "./nginx"
  #   ports:
  #     - "8080:80"
  #   volumes:
  #     - ./conf.d:/etc/nginx/conf.d
  #   networks:
  #     - web_nw
  #   depends_on: 
  #     - flaskapp
  #     - goservice
  ####################### Servidor de rabbitmq ###########################  
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    volumes:
      - ./Rabbitmq/etc/definitions.json:/etc/rabbitmq/definitions.json
      - ./Rabbitmq/etc/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./Rabbitmq/data:/var/lib/rabbitmq/mnesia/rabbit@my-rabbit
      - ./Rabbitmq/logs:/var/log/rabbitmq/log
    ports:
      - "4369:4369"
      - "5671:5671" 
      - "5672:5672" 
      - "15672:15672"
    networks: 
      - network
  ################## base de datos en mongo #################
  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db
    networks: 
      - network
  ################### base de datos en redis ########################
  redis:
    image: redis
    container_name: redis
    restart: always
    ports: 
      - 6379:6379
    networks: 
      - network
  
networks:
  network: {}
volumes:
  dbdata:
  mongodb_data_container: